// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: port.proto
// Protobuf C++ Version: 5.26.1

#include "port.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Net {

inline constexpr Port::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Port::Port(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PortDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PortDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PortDefaultTypeInternal() {}
  union {
    Port _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PortDefaultTypeInternal _Port_default_instance_;

inline constexpr PortBreakoutMode::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        port_{nullptr},
        mode_{static_cast< ::Net::BreakoutMode >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR PortBreakoutMode::PortBreakoutMode(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PortBreakoutModeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PortBreakoutModeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PortBreakoutModeDefaultTypeInternal() {}
  union {
    PortBreakoutMode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PortBreakoutModeDefaultTypeInternal _PortBreakoutMode_default_instance_;
}  // namespace Net
static ::_pb::Metadata file_level_metadata_port_2eproto[2];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_port_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_port_2eproto = nullptr;
const ::uint32_t
    TableStruct_port_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Net::Port, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Net::Port, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::Net::PortBreakoutMode, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Net::PortBreakoutMode, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Net::PortBreakoutMode, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::Net::PortBreakoutMode, _impl_.mode_),
        0,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::Net::Port)},
        {9, 19, -1, sizeof(::Net::PortBreakoutMode)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::Net::_Port_default_instance_._instance,
    &::Net::_PortBreakoutMode_default_instance_._instance,
};
const char descriptor_table_protodef_port_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\nport.proto\022\003Net\032\014common.proto\"\022\n\004Port\022"
    "\n\n\002id\030\001 \001(\t\"L\n\020PortBreakoutMode\022\027\n\004port\030"
    "\001 \001(\0132\t.Net.Port\022\037\n\004mode\030\002 \001(\0162\021.Net.Bre"
    "akoutMode*6\n\014BreakoutMode\022\021\n\rBREAKOUT_NO"
    "NE\020\000\022\023\n\017BREAKOUT_4X100G\020\0012\231\001\n\016PortManage"
    "ment\022&\n\nCreatePort\022\t.Net.Port\032\013.Net.Resu"
    "lt\"\000\022&\n\nDeletePort\022\t.Net.Port\032\013.Net.Resu"
    "lt\"\000\0227\n\017SetPortBreakout\022\025.Net.PortBreako"
    "utMode\032\013.Net.Result\"\000b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_port_2eproto_deps[1] =
    {
        &::descriptor_table_common_2eproto,
};
static ::absl::once_flag descriptor_table_port_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_port_2eproto = {
    false,
    false,
    349,
    descriptor_table_protodef_port_2eproto,
    "port.proto",
    &descriptor_table_port_2eproto_once,
    descriptor_table_port_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_port_2eproto::offsets,
    file_level_metadata_port_2eproto,
    file_level_enum_descriptors_port_2eproto,
    file_level_service_descriptors_port_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_port_2eproto_getter() {
  return &descriptor_table_port_2eproto;
}
namespace Net {
const ::google::protobuf::EnumDescriptor* BreakoutMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_port_2eproto);
  return file_level_enum_descriptors_port_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t BreakoutMode_internal_data_[] = {
    131072u, 0u, };
bool BreakoutMode_IsValid(int value) {
  return 0 <= value && value <= 1;
}
// ===================================================================

class Port::_Internal {
 public:
};

Port::Port(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Net.Port)
}
inline PROTOBUF_NDEBUG_INLINE Port::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : id_(arena, from.id_),
        _cached_size_{0} {}

Port::Port(
    ::google::protobuf::Arena* arena,
    const Port& from)
    : ::google::protobuf::Message(arena) {
  Port* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:Net.Port)
}
inline PROTOBUF_NDEBUG_INLINE Port::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void Port::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Port::~Port() {
  // @@protoc_insertion_point(destructor:Net.Port)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Port::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Port::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Port, _impl_._cached_size_),
              false,
          },
          &Port::MergeImpl,
          &Port::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Port::Clear() {
// @@protoc_insertion_point(message_clear_start:Net.Port)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Port::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 19, 2> Port::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Port_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Net::Port>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Port, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(Port, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\10\2\0\0\0\0\0\0"
    "Net.Port"
    "id"
  }},
};

::uint8_t* Port::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Net.Port)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Net.Port.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Net.Port)
  return target;
}

::size_t Port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Net.Port)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Port::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Port*>(&to_msg);
  auto& from = static_cast<const Port&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Net.Port)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Port::CopyFrom(const Port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Net.Port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Port::IsInitialized() const {
  return true;
}

void Port::InternalSwap(Port* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata Port::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_port_2eproto_getter,
                                   &descriptor_table_port_2eproto_once,
                                   file_level_metadata_port_2eproto[0]);
}
// ===================================================================

class PortBreakoutMode::_Internal {
 public:
  using HasBits = decltype(std::declval<PortBreakoutMode>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PortBreakoutMode, _impl_._has_bits_);
};

PortBreakoutMode::PortBreakoutMode(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Net.PortBreakoutMode)
}
inline PROTOBUF_NDEBUG_INLINE PortBreakoutMode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PortBreakoutMode::PortBreakoutMode(
    ::google::protobuf::Arena* arena,
    const PortBreakoutMode& from)
    : ::google::protobuf::Message(arena) {
  PortBreakoutMode* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.port_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::Net::Port>(
                              arena, *from._impl_.port_)
                        : nullptr;
  _impl_.mode_ = from._impl_.mode_;

  // @@protoc_insertion_point(copy_constructor:Net.PortBreakoutMode)
}
inline PROTOBUF_NDEBUG_INLINE PortBreakoutMode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PortBreakoutMode::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, port_),
           0,
           offsetof(Impl_, mode_) -
               offsetof(Impl_, port_) +
               sizeof(Impl_::mode_));
}
PortBreakoutMode::~PortBreakoutMode() {
  // @@protoc_insertion_point(destructor:Net.PortBreakoutMode)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PortBreakoutMode::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.port_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PortBreakoutMode::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(PortBreakoutMode, _impl_._cached_size_),
              false,
          },
          &PortBreakoutMode::MergeImpl,
          &PortBreakoutMode::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void PortBreakoutMode::Clear() {
// @@protoc_insertion_point(message_clear_start:Net.PortBreakoutMode)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.port_ != nullptr);
    _impl_.port_->Clear();
  }
  _impl_.mode_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PortBreakoutMode::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> PortBreakoutMode::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PortBreakoutMode, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PortBreakoutMode_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Net::PortBreakoutMode>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .Net.BreakoutMode mode = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PortBreakoutMode, _impl_.mode_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PortBreakoutMode, _impl_.mode_)}},
    // .Net.Port port = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PortBreakoutMode, _impl_.port_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Net.Port port = 1;
    {PROTOBUF_FIELD_OFFSET(PortBreakoutMode, _impl_.port_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .Net.BreakoutMode mode = 2;
    {PROTOBUF_FIELD_OFFSET(PortBreakoutMode, _impl_.mode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Net::Port>()},
  }}, {{
  }},
};

::uint8_t* PortBreakoutMode::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Net.PortBreakoutMode)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .Net.Port port = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.port_, _impl_.port_->GetCachedSize(), target, stream);
  }

  // .Net.BreakoutMode mode = 2;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Net.PortBreakoutMode)
  return target;
}

::size_t PortBreakoutMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Net.PortBreakoutMode)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Net.Port port = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.port_);
  }

  // .Net.BreakoutMode mode = 2;
  if (this->_internal_mode() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PortBreakoutMode::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PortBreakoutMode*>(&to_msg);
  auto& from = static_cast<const PortBreakoutMode&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:Net.PortBreakoutMode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.port_ != nullptr);
    if (_this->_impl_.port_ == nullptr) {
      _this->_impl_.port_ =
          ::google::protobuf::Message::CopyConstruct<::Net::Port>(arena, *from._impl_.port_);
    } else {
      _this->_impl_.port_->MergeFrom(*from._impl_.port_);
    }
  }
  if (from._internal_mode() != 0) {
    _this->_impl_.mode_ = from._impl_.mode_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PortBreakoutMode::CopyFrom(const PortBreakoutMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Net.PortBreakoutMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PortBreakoutMode::IsInitialized() const {
  return true;
}

void PortBreakoutMode::InternalSwap(PortBreakoutMode* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PortBreakoutMode, _impl_.mode_)
      + sizeof(PortBreakoutMode::_impl_.mode_)
      - PROTOBUF_FIELD_OFFSET(PortBreakoutMode, _impl_.port_)>(
          reinterpret_cast<char*>(&_impl_.port_),
          reinterpret_cast<char*>(&other->_impl_.port_));
}

::google::protobuf::Metadata PortBreakoutMode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_port_2eproto_getter,
                                   &descriptor_table_port_2eproto_once,
                                   file_level_metadata_port_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Net
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_port_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
